{
    "type": [
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        2,
        3,
        2,
        3,
        2
    ],
    "data": [
        "\nR version 4.2.1 (2022-06-23 ucrt) -- \"Funny-Looking Kid\"\nCopyright (C) 2022 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "match_ids",
        "Error: object 'match_ids' not found\n",
        "> ",
        "all <- worldfootballR::fotmob_get_league_matches(league_id = 77)",
        "> ",
        "all",
        "> ",
        "subfolder_names <- match_ids$match",
        "Error: object 'match_ids' not found\n",
        "> ",
        "match_ids <- all %>% ",
        "+ ",
        "  select(page_url, id) %>% ",
        "+ ",
        "  mutate(match = basename(page_url))",
        "Error in all %>% select(page_url, id) %>% mutate(match = basename(page_url)) : \n  could not find function \"%>%\"\n",
        "> ",
        "source(\"initiate.R\")",
        "> ",
        "get_score(id)",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;239m`filter()`\u001B[39m:\u001B[22m\n\u001B[38;5;239m\u001B[33m!\u001B[38;5;239m Problem while computing `..1 = id == a`.\u001B[39m\n\u001B[1mCaused by error in \u001B[38;5;239m`id == a`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m comparison (1) is possible only for atomic and list types\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mworldcup\u001B[22m::get_score(id)\n\u001B[90m  6. \u001B[39m\u001B[38;5;239m\u001B[1m\u001B[94mdplyr:::filter.data.frame(\u001B[38;5;239m\u001B[22m\u001B[39m., id == a\u001B[38;5;239m\u001B[1m\u001B[94m)\u001B[38;5;239m\u001B[22m\u001B[39m\n\u001B[90m  7. \u001B[39mdplyr:::filter_rows(.data, ..., caller_env = caller_env())\n\u001B[90m  8. \u001B[39mdplyr:::filter_eval(dots, mask = mask, error_call = error_call)\n\u001B[90m 10. \u001B[39mmask$eval_all_filter(dots, env_filter)\n",
        "> ",
        "id <- 3370549",
        "> ",
        "get_match_team_stats(id)",
        "> ",
        "get_score(id)",
        "> ",
        "",
        "> ",
        "match_ids <- all %>% ",
        "+ ",
        "  select(page_url, id) %>% ",
        "+ ",
        "  mutate(match = basename(page_url))",
        "> ",
        "match_ids",
        "> ",
        "subfolder_names <- match_ids$match",
        "> ",
        "",
        "> ",
        "for (j in 1:length(subfolder_names)){",
        "+ ",
        "  folder<-dir.create(paste0(subfolder_names[j]))",
        "+ ",
        "  ",
        "+ ",
        "  gtsave(gt(get_score(match_ids[[id]])), ",
        "+ ",
        "         paste0(subfolder_names[j], \"/\",subfolder_names[j], \"score.png\"))",
        "+ ",
        "  ",
        "+ ",
        "}",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;239m`vec_as_location2_result()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns past the end.\n\u001B[38;5;239m\u001B[36mℹ\u001B[38;5;239m Location 3370549 doesn't exist.\n\u001B[36mℹ\u001B[38;5;239m There are only 3 columns.\u001B[39m\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mgt\u001B[22m::gtsave(...)\n\u001B[90m  8. \u001B[39m\u001B[1mtibble\u001B[22m:::`[[.tbl_df`(match_ids, id)\n\u001B[90m  9. \u001B[39mtibble:::tbl_subset2(x, j = i, j_arg = substitute(i))\n\u001B[90m 10. \u001B[39mtibble:::vectbl_as_col_location2(j, length(x), j_arg = j_arg)\n\u001B[90m 13. \u001B[39m\u001B[1mvctrs\u001B[22m::vec_as_location2(j, n, names)\n\u001B[90m 15. \u001B[39m\u001B[38;5;239m\u001B[1m\u001B[94mvctrs:::vec_as_location2_result(\u001B[38;5;239m\u001B[22m\u001B[39mi, n = n, names = names, negative = \"error\", missing = missing, arg = arg, call = call\u001B[38;5;239m\u001B[1m\u001B[94m)\u001B[38;5;239m\u001B[22m\u001B[39m\n",
        "> ",
        "match_ids$match",
        " [1] \"qatar-vs-ecuador\"           \"england-vs-iran\"            \"senegal-vs-netherlands\"     \"usa-vs-wales\"               \"argentina-vs-saudi-arabia\" \n [6] \"denmark-vs-tunisia\"         \"mexico-vs-poland\"           \"france-vs-australia\"        \"morocco-vs-croatia\"         \"germany-vs-japan\"          \n[11] \"spain-vs-costa-rica\"        \"belgium-vs-canada\"          \"switzerland-vs-cameroon\"    \"uruguay-vs-south-korea\"     \"portugal-vs-ghana\"         \n[16] \"brazil-vs-serbia\"           \"wales-vs-iran\"             ",
        " \"qatar-vs-senegal\"           \"netherlands-vs-ecuador\"     \"england-vs-usa\"            \n[21] \"tunisia-vs-australia\"       \"poland-vs-saudi-arabia\"     \"france-vs-denmark\"          \"argentina-vs-mexico\"        \"japan-vs-costa-rica\"       \n[26] \"belgium-vs-morocco\"         \"croatia-vs-canada\"          \"spain-vs-germany\"           \"cameroon-vs-serbia\"         \"south-korea-vs-ghana\"      \n[31] \"brazil-vs-switzerland\"      \"portugal-vs-uruguay\"        \"ecuador-vs-senegal\"         \"netherlands-vs-qatar\"       \"iran-vs-usa\"               ",
        "\n[36] \"wales-vs-england\"           \"australia-vs-denmark\"       \"tunisia-vs-france\"          \"poland-vs-argentina\"        \"saudi-arabia-vs-mexico\"    \n[41] \"canada-vs-morocco\"          \"croatia-vs-belgium\"         \"costa-rica-vs-germany\"      \"japan-vs-spain\"             \"ghana-vs-uruguay\"          \n[46] \"south-korea-vs-portugal\"    \"cameroon-vs-brazil\"         \"serbia-vs-switzerland\"      \"1a-vs-2b\"                   \"1c-vs-2d\"                  \n[51] \"1d-vs-2c\"                   \"1b-vs-2a\"                  ",
        " \"1e-vs-2f\"                   \"1g-vs-2h\"                   \"1f-vs-2e\"                  \n[56] \"1h-vs-2g\"                   \"winner-1e2f-vs-winner-1g2h\" \"winner-1a2b-vs-winner-1c2d\" \"winner-1f2e-vs-winner-1h2g\" \"winner-1b2a-vs-winner-1d2c\"\n[61] \"winner-qf-1-vs-winner-qf-2\" \"winner-qf-3-vs-winner-qf-4\" \"loser-sf-1-vs-loser-sf-2\"   \"winner-sf-1-vs-winner-sf-2\"\n",
        "> ",
        "match_ids$match[[1]]",
        "[1] \"qatar-vs-ecuador\"\n",
        "> ",
        "subfolder_names <- match_ids$match[[1]]",
        "> ",
        "",
        "> ",
        "for (j in 1:length(subfolder_names)){",
        "+ ",
        "  folder<-dir.create(paste0(subfolder_names[j]))",
        "+ ",
        "  ",
        "+ ",
        "  gtsave(gt(get_score(match_ids[[id]])), ",
        "+ ",
        "         paste0(subfolder_names[j], \"/\",subfolder_names[j], \"score.png\"))",
        "+ ",
        "  ",
        "+ ",
        "}",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;239m`vec_as_location2_result()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns past the end.\n\u001B[38;5;239m\u001B[36mℹ\u001B[38;5;239m Location 3370549 doesn't exist.\n\u001B[36mℹ\u001B[38;5;239m There are only 3 columns.\u001B[39m\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mgt\u001B[22m::gtsave(...)\n\u001B[90m  8. \u001B[39m\u001B[1mtibble\u001B[22m:::`[[.tbl_df`(match_ids, id)\n\u001B[90m  9. \u001B[39mtibble:::tbl_subset2(x, j = i, j_arg = substitute(i))\n\u001B[90m 10. \u001B[39mtibble:::vectbl_as_col_location2(j, length(x), j_arg = j_arg)\n\u001B[90m 13. \u001B[39m\u001B[1mvctrs\u001B[22m::vec_as_location2(j, n, names)\n\u001B[90m 15. \u001B[39m\u001B[38;5;239m\u001B[1m\u001B[94mvctrs:::vec_as_location2_result(\u001B[38;5;239m\u001B[22m\u001B[39mi, n = n, names = names, negative = \"error\", missing = missing, arg = arg, call = call\u001B[38;5;239m\u001B[1m\u001B[94m)\u001B[38;5;239m\u001B[22m\u001B[39m\n",
        "> ",
        "subfolder_names <- match_ids$match[[1]]",
        "> ",
        "",
        "> ",
        "for (j in 1:length(subfolder_names)){",
        "+ ",
        "  folder<-dir.create(paste0(subfolder_names[j]))",
        "+ ",
        "  ",
        "+ ",
        "  gtsave(gt(get_score(as.numeric(match_ids[[id]]))), ",
        "+ ",
        "         paste0(subfolder_names[j], \"/\",subfolder_names[j], \"score.png\"))",
        "+ ",
        "  ",
        "+ ",
        "}",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;239m`vec_as_location2_result()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns past the end.\n\u001B[38;5;239m\u001B[36mℹ\u001B[38;5;239m Location 3370549 doesn't exist.\n\u001B[36mℹ\u001B[38;5;239m There are only 3 columns.\u001B[39m\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mgt\u001B[22m::gtsave(...)\n\u001B[90m  8. \u001B[39m\u001B[1mtibble\u001B[22m:::`[[.tbl_df`(match_ids, id)\n\u001B[90m  9. \u001B[39mtibble:::tbl_subset2(x, j = i, j_arg = substitute(i))\n\u001B[90m 10. \u001B[39mtibble:::vectbl_as_col_location2(j, length(x), j_arg = j_arg)\n\u001B[90m 13. \u001B[39m\u001B[1mvctrs\u001B[22m::vec_as_location2(j, n, names)\n\u001B[90m 15. \u001B[39m\u001B[38;5;239m\u001B[1m\u001B[94mvctrs:::vec_as_location2_result(\u001B[38;5;239m\u001B[22m\u001B[39mi, n = n, names = names, negative = \"error\", missing = missing, arg = arg, call = call\u001B[38;5;239m\u001B[1m\u001B[94m)\u001B[38;5;239m\u001B[22m\u001B[39m\n",
        "> ",
        "for(i in 1:length(match_ids$id)) {",
        "+ ",
        "  print(match_ids[[id]])",
        "+ ",
        "}",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;239m`vec_as_location2_result()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m Can't subset columns past the end.\n\u001B[38;5;239m\u001B[36mℹ\u001B[38;5;239m Location 3370549 doesn't exist.\n\u001B[36mℹ\u001B[38;5;239m There are only 3 columns.\u001B[39m\nBacktrace:\n\u001B[90m  1. \u001B[39m\u001B[1mbase\u001B[22m::print(match_ids[[id]])\n\u001B[90m  3. \u001B[39m\u001B[1mtibble\u001B[22m:::`[[.tbl_df`(match_ids, id)\n\u001B[90m  4. \u001B[39mtibble:::tbl_subset2(x, j = i, j_arg = substitute(i))\n\u001B[90m  5. \u001B[39mtibble:::vectbl_as_col_location2(j, length(x), j_arg = j_arg)\n\u001B[90m  8. \u001B[39m\u001B[1mvctrs\u001B[22m::vec_as_location2(j, n, names)\n\u001B[90m 10. \u001B[39m\u001B[38;5;239m\u001B[1m\u001B[94mvctrs:::vec_as_location2_result(\u001B[38;5;239m\u001B[22m\u001B[39mi, n = n, names = names, negative = \"error\", missing = missing, arg = arg, call = call\u001B[38;5;239m\u001B[1m\u001B[94m)\u001B[38;5;239m\u001B[22m\u001B[39m\n",
        "> ",
        "for(i in 1:length(match_ids$id)) {",
        "+ ",
        "  print(match_ids$id)",
        "+ ",
        "}",
        " [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\"",
        " \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\"",
        " \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\"",
        " \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\"",
        " \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\"",
        " \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\"",
        " \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"",
        "\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16]",
        " \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\"",
        " \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\"",
        " \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\"",
        " \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\"",
        " \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\"",
        " \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\"",
        " \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"",
        "\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31]",
        " \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\"",
        " \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\"",
        " \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\"",
        " \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\"",
        " \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\"",
        " \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\"",
        " \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"",
        "\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46]",
        " \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\"",
        " \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\"",
        " \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\"",
        " \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\"",
        " \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\"",
        " \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\"",
        " \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\"",
        " \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\"",
        " \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\"",
        " \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\"",
        " \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\"",
        " \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\"",
        " \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\"",
        " \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\" \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\"",
        " \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\" \"3854554\" \"3854560\" \"3854572\" \"3854580\" \"3854573\" \"3854579\" \"3854592\" \"3854586\" \"3854585\" \"3854591\" \"3854598\" \"3854604\" \"3854603\"\n[16] \"3854597\" \"3854562\" \"3854555\" \"3854556\" \"3854561\" \"3854582\" \"3854575\" \"3854581\" \"3854574\" \"3854588\" \"3854593\" \"3854594\"",
        " \"3854587\" \"3854600\" \"3854606\"\n[31] \"3854599\" \"3854605\" \"3854558\" \"3854557\" \"3854564\" \"3854563\" \"3854584\" \"3854583\" \"3854576\" \"3854577\" \"3854596\" \"3854595\" \"3854590\" \"3854589\" \"3854608\"\n[46] \"3854607\" \"3854601\" \"3854602\" \"3370550\" \"3370551\" \"3370552\" \"3370553\" \"3370555\" \"3370554\" \"3370556\" \"3370557\" \"3370565\" \"3370566\" \"3370567\" \"3370568\"\n[61] \"3370569\" \"3370570\" \"3370571\" \"3370572\"\n [1] \"3370549\" \"3854559\"",
        "> ",
        "lapply(match_ids$id, print)",
        "[1] \"3370549\"\n[1] \"3854559\"\n[1] \"3854554\"\n[1] \"3854560\"\n[1] \"3854572\"\n[1] \"3854580\"\n[1] \"3854573\"\n[1] \"3854579\"\n[1] \"3854592\"\n[1] \"3854586\"\n[1] \"3854585\"\n[1] \"3854591\"\n[1] \"3854598\"\n[1] \"3854604\"\n[1] \"3854603\"\n[1] \"3854597\"\n[1] \"3854562\"\n[1] \"3854555\"\n[1] \"3854556\"\n[1] \"3854561\"\n[1] \"3854582\"\n[1] \"3854575\"\n[1] \"3854581\"\n[1] \"3854574\"\n[1] \"3854588\"\n[1] \"3854593\"\n[1] \"3854594\"\n[1] \"3854587\"\n[1] \"3854600\"\n[1] \"3854606\"\n[1] \"3854599\"\n[1] \"3854605\"\n[1] \"3854558\"\n[1] \"3854557\"\n[1] \"3854564\"\n[1] \"3854563\"\n[1] \"3854584\"",
        "\n[1] \"3854583\"\n[1] \"3854576\"\n[1] \"3854577\"\n[1] \"3854596\"\n[1] \"3854595\"\n[1] \"3854590\"\n[1] \"3854589\"\n[1] \"3854608\"\n[1] \"3854607\"\n[1] \"3854601\"\n[1] \"3854602\"\n[1] \"3370550\"\n[1] \"3370551\"\n[1] \"3370552\"\n[1] \"3370553\"\n[1] \"3370555\"\n[1] \"3370554\"\n[1] \"3370556\"\n[1] \"3370557\"\n[1] \"3370565\"\n[1] \"3370566\"\n[1] \"3370567\"\n[1] \"3370568\"\n[1] \"3370569\"\n[1] \"3370570\"\n[1] \"3370571\"\n[1] \"3370572\"\n[[1]]\n[1] \"3370549\"\n\n[[2]]\n[1] \"3854559\"\n\n[[3]]\n[1] \"3854554\"\n\n[[4]]\n[1] \"3854560\"\n\n[[5]]\n[1] \"3854572\"\n\n[[6]]\n[1] \"3854580\"\n\n[[7]]\n[1]",
        " \"3854573\"\n\n[[8]]\n[1] \"3854579\"\n\n[[9]]\n[1] \"3854592\"\n\n[[10]]\n[1] \"3854586\"\n\n[[11]]\n[1] \"3854585\"\n\n[[12]]\n[1] \"3854591\"\n\n[[13]]\n[1] \"3854598\"\n\n[[14]]\n[1] \"3854604\"\n\n[[15]]\n[1] \"3854603\"\n\n[[16]]\n[1] \"3854597\"\n\n[[17]]\n[1] \"3854562\"\n\n[[18]]\n[1] \"3854555\"\n\n[[19]]\n[1] \"3854556\"\n\n[[20]]\n[1] \"3854561\"\n\n[[21]]\n[1] \"3854582\"\n\n[[22]]\n[1] \"3854575\"\n\n[[23]]\n[1] \"3854581\"\n\n[[24]]\n[1] \"3854574\"\n\n[[25]]\n[1] \"3854588\"\n\n[[26]]\n[1] \"3854593\"\n\n[[27]]\n[1] \"3854594\"\n\n[[28]]\n[1] \"3854587\"\n\n[[29]]\n[1] \"3854600\"\n\n[[30]]\n[1] \"3854606\"",
        "\n\n[[31]]\n[1] \"3854599\"\n\n[[32]]\n[1] \"3854605\"\n\n[[33]]\n[1] \"3854558\"\n\n[[34]]\n[1] \"3854557\"\n\n[[35]]\n[1] \"3854564\"\n\n[[36]]\n[1] \"3854563\"\n\n[[37]]\n[1] \"3854584\"\n\n[[38]]\n[1] \"3854583\"\n\n[[39]]\n[1] \"3854576\"\n\n[[40]]\n[1] \"3854577\"\n\n[[41]]\n[1] \"3854596\"\n\n[[42]]\n[1] \"3854595\"\n\n[[43]]\n[1] \"3854590\"\n\n[[44]]\n[1] \"3854589\"\n\n[[45]]\n[1] \"3854608\"\n\n[[46]]\n[1] \"3854607\"\n\n[[47]]\n[1] \"3854601\"\n\n[[48]]\n[1] \"3854602\"\n\n[[49]]\n[1] \"3370550\"\n\n[[50]]\n[1] \"3370551\"\n\n[[51]]\n[1] \"3370552\"\n\n[[52]]\n[1] \"3370553\"\n\n[[53]]\n[1] \"3370555\"\n\n[[54]]\n",
        "[1] \"3370554\"\n\n[[55]]\n[1] \"3370556\"\n\n[[56]]\n[1] \"3370557\"\n\n[[57]]\n[1] \"3370565\"\n\n[[58]]\n[1] \"3370566\"\n\n[[59]]\n[1] \"3370567\"\n\n[[60]]\n[1] \"3370568\"\n\n[[61]]\n[1] \"3370569\"\n\n[[62]]\n[1] \"3370570\"\n\n[[63]]\n[1] \"3370571\"\n\n[[64]]\n[1] \"3370572\"\n\n",
        "> ",
        "",
        "> ",
        "df <- tribble(",
        "+ ",
        "  ~x, ~y, ",
        "+ ",
        "  \"a\", 2,  ",
        "+ ",
        "  \"b\", 1",
        "+ ",
        ")",
        "> ",
        "",
        "> ",
        "---",
        "+ ",
        "title: \"world-book\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "---",
        "+ ",
        "title: \"world-book\"",
        "Error in -title : invalid argument to unary operator\n",
        "\nRestarting R session...\n\n",
        "> ",
        "source(\"initiate.R\")",
        "> ",
        "id <- 3370549",
        "> ",
        "get_match_team_stats(id)",
        "> ",
        "get_score(id)",
        "> ",
        "",
        "> ",
        "all <- worldfootballR::fotmob_get_league_matches(league_id = 77)",
        "> ",
        "match_ids <- all %>% ",
        "+ ",
        "  select(page_url, id) %>% ",
        "+ ",
        "  mutate(match = basename(page_url))",
        "> ",
        "",
        "> ",
        "df <- tribble(",
        "+ ",
        "  ~x, ~y, ",
        "+ ",
        "  \"a\", 2,  ",
        "+ ",
        "  \"b\", 1",
        "+ ",
        ")",
        "> ",
        "---",
        "+ ",
        "title: \"world-book\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "for(i in seq(nrow(df))) {",
        "+ ",
        "    print(paste(df$x[i], \"occurs\", df$y[i], \"time[s]\"))",
        "+ ",
        "}",
        "[1] \"a occurs 2 time[s]\"\n[1] \"b occurs 1 time[s]\"\n",
        "> ",
        "---",
        "+ ",
        "title: \"world-book\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "---",
        "+ ",
        "title: \"world-book\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "source(\"initiate.R\")",
        "> ",
        "id <- 3370549",
        "> ",
        "get_score(id)",
        "> ",
        "all <- worldfootballR::fotmob_get_league_matches(league_id = 77)",
        "> ",
        "match_ids <- all %>% ",
        "+ ",
        "  select(page_url, id) %>% ",
        "+ ",
        "  mutate(match = basename(page_url))",
        "> ",
        "match_ids",
        "> ",
        "",
        "> ",
        "df <- tribble(",
        "+ ",
        "  ~x, ~y, ",
        "+ ",
        "  \"a\", 2,  ",
        "+ ",
        "  \"b\", 1",
        "+ ",
        ")",
        "> ",
        "for(i in seq(nrow(df))) {",
        "+ ",
        "  print(paste(df$x[i], \"occurs\", df$y[i], \"time[s]\"))",
        "+ ",
        "}",
        "[1] \"a occurs 2 time[s]\"\n[1] \"b occurs 1 time[s]\"\n",
        "> ",
        "for(i in seq(nrow(match_ids))) {",
        "+ ",
        "  print(paste(match_ids$id[i], match_ids$match[i]))",
        "+ ",
        "}",
        "[1] \"3370549 qatar-vs-ecuador\"\n[1] \"3854559 england-vs-iran\"\n[1] \"3854554 senegal-vs-netherlands\"\n[1] \"3854560 usa-vs-wales\"\n[1] \"3854572 argentina-vs-saudi-arabia\"\n[1] \"3854580 denmark-vs-tunisia\"\n[1] \"3854573 mexico-vs-poland\"\n[1] \"3854579 france-vs-australia\"\n[1] \"3854592 morocco-vs-croatia\"\n[1] \"3854586 germany-vs-japan\"\n[1] \"3854585 spain-vs-costa-rica\"\n[1] \"3854591 belgium-vs-canada\"\n[1] \"3854598 switzerland-vs-cameroon\"\n[1] \"3854604 uruguay-vs-south-korea\"\n[1] \"3854603 portugal-vs-ghana\"\n[1] \"3854597 brazil-vs-serbia\"",
        "\n[1] \"3854562 wales-vs-iran\"\n[1] \"3854555 qatar-vs-senegal\"\n[1] \"3854556 netherlands-vs-ecuador\"\n[1] \"3854561 england-vs-usa\"\n[1] \"3854582 tunisia-vs-australia\"\n[1] \"3854575 poland-vs-saudi-arabia\"\n[1] \"3854581 france-vs-denmark\"\n[1] \"3854574 argentina-vs-mexico\"\n[1] \"3854588 japan-vs-costa-rica\"\n[1] \"3854593 belgium-vs-morocco\"\n[1] \"3854594 croatia-vs-canada\"\n[1] \"3854587 spain-vs-germany\"\n[1] \"3854600 cameroon-vs-serbia\"\n[1] \"3854606 south-korea-vs-ghana\"\n[1] \"3854599 brazil-vs-switzerland\"\n[1] \"3854605 portugal-vs-uruguay\"",
        "\n[1] \"3854558 ecuador-vs-senegal\"\n[1] \"3854557 netherlands-vs-qatar\"\n[1] \"3854564 iran-vs-usa\"\n[1] \"3854563 wales-vs-england\"\n[1] \"3854584 australia-vs-denmark\"\n[1] \"3854583 tunisia-vs-france\"\n[1] \"3854576 poland-vs-argentina\"\n[1] \"3854577 saudi-arabia-vs-mexico\"\n[1] \"3854596 canada-vs-morocco\"\n[1] \"3854595 croatia-vs-belgium\"\n[1] \"3854590 costa-rica-vs-germany\"\n[1] \"3854589 japan-vs-spain\"\n[1] \"3854608 ghana-vs-uruguay\"\n[1] \"3854607 south-korea-vs-portugal\"\n[1] \"3854601 cameroon-vs-brazil\"\n[1] \"3854602 serbia-vs-switzerland\"",
        "\n[1] \"3370550 1a-vs-2b\"\n[1] \"3370551 1c-vs-2d\"\n[1] \"3370552 1d-vs-2c\"\n[1] \"3370553 1b-vs-2a\"\n[1] \"3370555 1e-vs-2f\"\n[1] \"3370554 1g-vs-2h\"\n[1] \"3370556 1f-vs-2e\"\n[1] \"3370557 1h-vs-2g\"\n[1] \"3370565 winner-1e2f-vs-winner-1g2h\"\n[1] \"3370566 winner-1a2b-vs-winner-1c2d\"\n[1] \"3370567 winner-1f2e-vs-winner-1h2g\"\n[1] \"3370568 winner-1b2a-vs-winner-1d2c\"\n[1] \"3370569 winner-qf-1-vs-winner-qf-2\"\n[1] \"3370570 winner-qf-3-vs-winner-qf-4\"\n[1] \"3370571 loser-sf-1-vs-loser-sf-2\"\n[1] \"3370572 winner-sf-1-vs-winner-sf-2\"\n",
        "> ",
        "for(i in seq(nrow(match_ids))) {",
        "+ ",
        "  print(paste(match_ids$id[i], match_ids$match[i]))",
        "+ ",
        "  folder<-dir.create(paste0(match_ids$id[i]))",
        "+ ",
        "  ",
        "+ ",
        " # gtsave(gt(get_score()), ",
        "+ ",
        "  #       paste0(subfolder_names[j], \"/\",subfolder_names[j], \"score.png\"))",
        "+ ",
        "}",
        "[1] \"3370549 qatar-vs-ecuador\"\n[1] \"3854559 england-vs-iran\"\n[1] \"3854554 senegal-vs-netherlands\"\n[1] \"3854560 usa-vs-wales\"\n[1] \"3854572 argentina-vs-saudi-arabia\"\n[1] \"3854580 denmark-vs-tunisia\"\n[1] \"3854573 mexico-vs-poland\"\n[1] \"3854579 france-vs-australia\"\n[1] \"3854592 morocco-vs-croatia\"\n[1] \"3854586 germany-vs-japan\"\n[1] \"3854585 spain-vs-costa-rica\"\n[1] \"3854591 belgium-vs-canada\"\n[1] \"3854598 switzerland-vs-cameroon\"\n[1] \"3854604 uruguay-vs-south-korea\"\n[1] \"3854603 portugal-vs-ghana\"\n[1] \"3854597 brazil-vs-serbia\"",
        "\n[1] \"3854562 wales-vs-iran\"\n[1] \"3854555 qatar-vs-senegal\"\n[1] \"3854556 netherlands-vs-ecuador\"\n[1] \"3854561 england-vs-usa\"\n[1] \"3854582 tunisia-vs-australia\"\n[1] \"3854575 poland-vs-saudi-arabia\"\n[1] \"3854581 france-vs-denmark\"\n[1] \"3854574 argentina-vs-mexico\"\n[1] \"3854588 japan-vs-costa-rica\"\n[1] \"3854593 belgium-vs-morocco\"\n[1] \"3854594 croatia-vs-canada\"\n[1] \"3854587 spain-vs-germany\"\n[1] \"3854600 cameroon-vs-serbia\"\n[1] \"3854606 south-korea-vs-ghana\"\n[1] \"3854599 brazil-vs-switzerland\"\n[1] \"3854605 portugal-vs-uruguay\"",
        "\n[1] \"3854558 ecuador-vs-senegal\"\n[1] \"3854557 netherlands-vs-qatar\"\n[1] \"3854564 iran-vs-usa\"\n[1] \"3854563 wales-vs-england\"\n[1] \"3854584 australia-vs-denmark\"\n[1] \"3854583 tunisia-vs-france\"\n[1] \"3854576 poland-vs-argentina\"\n[1] \"3854577 saudi-arabia-vs-mexico\"\n[1] \"3854596 canada-vs-morocco\"\n[1] \"3854595 croatia-vs-belgium\"\n[1] \"3854590 costa-rica-vs-germany\"\n[1] \"3854589 japan-vs-spain\"\n[1] \"3854608 ghana-vs-uruguay\"\n[1] \"3854607 south-korea-vs-portugal\"\n[1] \"3854601 cameroon-vs-brazil\"\n[1] \"3854602 serbia-vs-switzerland\"",
        "\n[1] \"3370550 1a-vs-2b\"\n[1] \"3370551 1c-vs-2d\"\n[1] \"3370552 1d-vs-2c\"\n[1] \"3370553 1b-vs-2a\"\n[1] \"3370555 1e-vs-2f\"\n[1] \"3370554 1g-vs-2h\"\n[1] \"3370556 1f-vs-2e\"\n[1] \"3370557 1h-vs-2g\"\n[1] \"3370565 winner-1e2f-vs-winner-1g2h\"\n[1] \"3370566 winner-1a2b-vs-winner-1c2d\"\n[1] \"3370567 winner-1f2e-vs-winner-1h2g\"\n[1] \"3370568 winner-1b2a-vs-winner-1d2c\"\n[1] \"3370569 winner-qf-1-vs-winner-qf-2\"\n[1] \"3370570 winner-qf-3-vs-winner-qf-4\"\n[1] \"3370571 loser-sf-1-vs-loser-sf-2\"\n[1] \"3370572 winner-sf-1-vs-winner-sf-2\"\n",
        "> ",
        "for(i in seq(nrow(match_ids))) {",
        "+ ",
        "  print(paste(match_ids$id[i], match_ids$match[i]))",
        "+ ",
        "  folder<-dir.create(paste0(match_ids$match[i]))",
        "+ ",
        "  ",
        "+ ",
        " # gtsave(gt(get_score()), ",
        "+ ",
        "  #       paste0(subfolder_names[j], \"/\",subfolder_names[j], \"score.png\"))",
        "+ ",
        "}",
        "[1] \"3370549 qatar-vs-ecuador\"\n[1] \"3854559 england-vs-iran\"\n[1] \"3854554 senegal-vs-netherlands\"\n[1] \"3854560 usa-vs-wales\"\n[1] \"3854572 argentina-vs-saudi-arabia\"\n[1] \"3854580 denmark-vs-tunisia\"\n[1] \"3854573 mexico-vs-poland\"\n[1] \"3854579 france-vs-australia\"\n[1] \"3854592 morocco-vs-croatia\"\n[1] \"3854586 germany-vs-japan\"\n[1] \"3854585 spain-vs-costa-rica\"\n[1] \"3854591 belgium-vs-canada\"\n[1] \"3854598 switzerland-vs-cameroon\"\n[1] \"3854604 uruguay-vs-south-korea\"\n[1] \"3854603 portugal-vs-ghana\"\n[1] \"3854597 brazil-vs-serbia\"",
        "\n[1] \"3854562 wales-vs-iran\"\n[1] \"3854555 qatar-vs-senegal\"\n[1] \"3854556 netherlands-vs-ecuador\"\n[1] \"3854561 england-vs-usa\"\n[1] \"3854582 tunisia-vs-australia\"\n[1] \"3854575 poland-vs-saudi-arabia\"\n[1] \"3854581 france-vs-denmark\"\n[1] \"3854574 argentina-vs-mexico\"\n[1] \"3854588 japan-vs-costa-rica\"\n[1] \"3854593 belgium-vs-morocco\"\n[1] \"3854594 croatia-vs-canada\"\n[1] \"3854587 spain-vs-germany\"\n[1] \"3854600 cameroon-vs-serbia\"\n[1] \"3854606 south-korea-vs-ghana\"\n[1] \"3854599 brazil-vs-switzerland\"\n[1] \"3854605 portugal-vs-uruguay\"",
        "\n[1] \"3854558 ecuador-vs-senegal\"\n[1] \"3854557 netherlands-vs-qatar\"\n[1] \"3854564 iran-vs-usa\"\n[1] \"3854563 wales-vs-england\"\n[1] \"3854584 australia-vs-denmark\"\n[1] \"3854583 tunisia-vs-france\"\n[1] \"3854576 poland-vs-argentina\"\n[1] \"3854577 saudi-arabia-vs-mexico\"\n[1] \"3854596 canada-vs-morocco\"\n[1] \"3854595 croatia-vs-belgium\"\n[1] \"3854590 costa-rica-vs-germany\"\n[1] \"3854589 japan-vs-spain\"\n[1] \"3854608 ghana-vs-uruguay\"\n[1] \"3854607 south-korea-vs-portugal\"\n[1] \"3854601 cameroon-vs-brazil\"\n[1] \"3854602 serbia-vs-switzerland\"",
        "\n[1] \"3370550 1a-vs-2b\"\n[1] \"3370551 1c-vs-2d\"\n[1] \"3370552 1d-vs-2c\"\n[1] \"3370553 1b-vs-2a\"\n[1] \"3370555 1e-vs-2f\"\n[1] \"3370554 1g-vs-2h\"\n[1] \"3370556 1f-vs-2e\"\n[1] \"3370557 1h-vs-2g\"\n[1] \"3370565 winner-1e2f-vs-winner-1g2h\"\n[1] \"3370566 winner-1a2b-vs-winner-1c2d\"\n[1] \"3370567 winner-1f2e-vs-winner-1h2g\"\n[1] \"3370568 winner-1b2a-vs-winner-1d2c\"\n[1] \"3370569 winner-qf-1-vs-winner-qf-2\"\n[1] \"3370570 winner-qf-3-vs-winner-qf-4\"\n[1] \"3370571 loser-sf-1-vs-loser-sf-2\"\n[1] \"3370572 winner-sf-1-vs-winner-sf-2\"\n",
        "> ",
        "match_ids",
        "> ",
        "match_ids <- match_ids %>% slice(3)",
        "> ",
        "for(i in seq(nrow(match_ids))) {",
        "+ ",
        "  print(paste(match_ids$id[i], match_ids$match[i]))",
        "+ ",
        "  folder<-dir.create(paste0(match_ids$match[i]))",
        "+ ",
        "  ",
        "+ ",
        "  gtsave(gt(get_score(match_ids$id[i])), ",
        "+ ",
        "         paste0(subfolder_names[j], \"/\",subfolder_names[j], \"score.png\"))",
        "+ ",
        "}",
        "[1] \"3854554 senegal-vs-netherlands\"\n",
        "Error in paste0(subfolder_names[j], \"/\", subfolder_names[j], \"score.png\") : \n  object 'subfolder_names' not found\n",
        "> ",
        "for(i in seq(nrow(match_ids))) {",
        "+ ",
        "  print(paste(match_ids$id[i], match_ids$match[i]))",
        "+ ",
        "  folder<-dir.create(paste0(match_ids$match[i]))",
        "+ ",
        "  ",
        "+ ",
        "  gtsave(gt(get_score(match_ids$id[i])), ",
        "+ ",
        "         paste0(match_ids$match[i], \"/\",match_ids$match[i], \"score.png\"))",
        "+ ",
        "}",
        "[1] \"3854554 senegal-vs-netherlands\"\n",
        "file:///C:/Users/Home/AppData/Local/Temp/RtmpakGL8F/file58a41e711a46.html screenshot completed\n",
        "> ",
        "match_ids",
        "> ",
        "all <- worldfootballR::fotmob_get_league_matches(league_id = 77)",
        "> ",
        "match_ids <- all %>% ",
        "+ ",
        "  select(page_url, id) %>% ",
        "+ ",
        "  mutate(match = basename(page_url))",
        "> ",
        "match_ids <- match_ids %>% slice(1:3)",
        "> ",
        "for(i in seq(nrow(match_ids))) {",
        "+ ",
        "  print(paste(match_ids$id[i], match_ids$match[i]))",
        "+ ",
        "  folder<-dir.create(paste0(match_ids$match[i]))",
        "+ ",
        "  ",
        "+ ",
        "  gtsave(gt(get_score(match_ids$id[i])), ",
        "+ ",
        "         paste0(match_ids$match[i], \"/\",match_ids$match[i], \"score.png\"))",
        "+ ",
        "}",
        "[1] \"3370549 qatar-vs-ecuador\"\n",
        "file:///C:/Users/Home/AppData/Local/Temp/RtmpakGL8F/file58a47eee6016.html screenshot completed\n",
        "[1] \"3854559 england-vs-iran\"\n",
        "file:///C:/Users/Home/AppData/Local/Temp/RtmpakGL8F/file58a425486a2e.html screenshot completed\n",
        "[1] \"3854554 senegal-vs-netherlands\"\n",
        "file:///C:/Users/Home/AppData/Local/Temp/RtmpakGL8F/file58a47d2f40da.html screenshot completed\n",
        "\nRestarting R session...\n\n"
    ]
}